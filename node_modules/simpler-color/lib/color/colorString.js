"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = colorString;

var _hsl = require("./hsl");

var _rgb = require("./rgb");

var _hslToRgb = _interopRequireDefault(require("./transforms/hslToRgb"));

function roundRgb(rgb) {
  return {
    r: Math.round(rgb.r),
    g: Math.round(rgb.g),
    b: Math.round(rgb.b),
    a: rgb.a
  };
}

function rgbToHexString(rgb) {
  var int = ((Math.round(rgb.r) & 0xff) << 16) + ((Math.round(rgb.g) & 0xff) << 8) + (Math.round(rgb.b) & 0xff);
  var str = int.toString(16).toUpperCase();
  var padLeft = '000000'.substring(str.length);
  return "#" + padLeft + str;
}

function rgbToRgbaString(rgb) {
  rgb = roundRgb(rgb);
  return "rgba(" + rgb.r + ", " + rgb.g + ", " + rgb.b + ", " + rgb.a + ")";
}

function colorString(color) {
  var rgbColor = (0, _hsl.isHsl)(color) ? (0, _hslToRgb.default)(color) : (0, _rgb.normalizeRgb)(color);
  return rgbColor.a === 1 ? rgbToHexString(rgbColor) : rgbToRgbaString(rgbColor);
}