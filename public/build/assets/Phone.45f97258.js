import{P as y}from"./PsObject.a17ef38f.js";class l{constructor(){this.urlParamsAndQuery={params:{},query:{}},this.keyword="",this.country_name="",this.country_code="",this.status="",this.is_default="",this.keyword="",this.country_name="",this.country_code="",this.status="",this.is_default=""}getUrlParamsAndQuery(){const t={},s={};return this.keyword!=""&&(t.keyword=this.keyword),this.country_name!=""&&(t.country_name=this.country_name),this.country_code!=""&&(t.country_code=this.country_code),this.status!=""&&(t.status=this.status),this.is_default!=""&&(t.is_default=this.is_default),this.urlParamsAndQuery.params=s,this.urlParamsAndQuery.query=t,this.urlParamsAndQuery}parseParamsAndQuery(t){var s,r,i,e,u,a,n,o,h,d;this.keyword=(r=(s=t.keyword)==null?void 0:s.toString())!=null?r:"",this.country_name=(e=(i=t.country_name)==null?void 0:i.toString())!=null?e:"",this.country_code=(a=(u=t.country_code)==null?void 0:u.toString())!=null?a:"",this.status=(o=(n=t.status)==null?void 0:n.toString())!=null?o:"",this.is_default=(d=(h=t.is_default)==null?void 0:h.toString())!=null?d:""}getRecentParameterHolder(){return this.keyword="",this.country_name="",this.country_code="",this.status="",this.is_default="",this}resetParameterHolder(){return this.keyword="",this.country_name="",this.country_code="",this.status="",this.is_default="",this}toMap(){const t={};return t.keyword=this.keyword,t.country_name=this.country_name,t.country_code=this.country_code,t.status=this.status,t.is_default=this.is_default,t}}class c extends y{constructor(){super(...arguments),this.id="",this.country_name="",this.country_code="",this.status="",this.is_default=""}init(t,s="",r="",i="",e=""){return this.id=t,this.country_name=s,this.country_code=r,this.status=i,this.is_default=e,this}getPrimaryKey(){return this.id}toMap(t){const s={};return s.id=t.id,s.country_name=t.country_name,s.country_code=t.country_code,s.status=t.status,s.is_default=t.is_default,s}toMapList(t){const s=[];for(let r=0;r<t.length;r++)t[r]!=null&&s.push(this.toMap(t[r]));return s}fromMap(t){return new c().init(t.id,t.country_name,t.country_code,t.status,t.is_default)}fromMapList(t){const s=[];for(const r in t)r!=null&&s.push(this.fromMap(r));return s}}export{l as P,c as a};
